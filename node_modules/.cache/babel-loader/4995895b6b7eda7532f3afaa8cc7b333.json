{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/timekeeper/timeKeeper.jsx\";\nimport React from \"react\";\nimport { incrementTime } from \"../../redux/time/time.actions\";\nimport { connect } from \"react-redux\";\n\nclass TimeKeeper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.theTimer = action => {\n      // destructuring props\n      let {\n        incrementTime,\n        time: {\n          time\n        }\n      } = this.props;\n\n      if (action === \"go\") {\n        this.timer = setTimeout(() => {\n          if (time < 16) {\n            incrementTime(time + 1);\n          } else {\n            incrementTime(1);\n          }\n        }, 100);\n      } else if (action === \"stop\") {\n        clearInterval(this.timer);\n      }\n    };\n\n    this.stopTimer = () => {\n      console.log(\"hej\");\n    };\n\n    this.startTimer = () => {\n      this.props.incrementTime(1);\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    this.theTimer(\"go\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.startTimer(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Start Time\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.theTimer(\"stop\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \">stop\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  incrementTime: time => dispatch(incrementTime(time))\n});\n\nconst mapStateToProps = state => ({\n  time: state.time\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeKeeper);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/timekeeper/timeKeeper.jsx"],"names":["React","incrementTime","connect","TimeKeeper","Component","constructor","props","theTimer","action","time","timer","setTimeout","clearInterval","stopTimer","console","log","startTimer","componentDidMount","componentDidUpdate","render","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,QATmB,GASPC,MAAD,IAAY;AACrB;AACA,UAAI;AACFP,QAAAA,aADE;AAEFQ,QAAAA,IAAI,EAAE;AAAEA,UAAAA;AAAF;AAFJ,UAGA,KAAKH,KAHT;;AAKA,UAAIE,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAKE,KAAL,GAAaC,UAAU,CAAC,MAAM;AAC5B,cAAIF,IAAI,GAAG,EAAX,EAAe;AACbR,YAAAA,aAAa,CAACQ,IAAI,GAAG,CAAR,CAAb;AACD,WAFD,MAEO;AACLR,YAAAA,aAAa,CAAC,CAAD,CAAb;AACD;AACF,SANsB,EAMpB,GANoB,CAAvB;AAOD,OARD,MAQO,IAAIO,MAAM,KAAK,MAAf,EAAuB;AAC5BI,QAAAA,aAAa,CAAC,KAAKF,KAAN,CAAb;AACD;AACF,KA3BkB;;AAAA,SA6BnBG,SA7BmB,GA6BP,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,KA/BkB;;AAAA,SAiCnBC,UAjCmB,GAiCN,MAAM;AACjB,WAAKV,KAAL,CAAWL,aAAX,CAAyB,CAAzB;AACD,KAnCkB;AAElB;;AACDgB,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,kBAAkB,GAAG;AACnB,SAAKX,QAAL,CAAc,IAAd;AACD;;AA8BDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKH,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKT,QAAL,CAAc,MAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD;;AA7CsC;;AAgDzC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,aAAa,EAAGQ,IAAD,IAAUY,QAAQ,CAACpB,aAAa,CAACQ,IAAD,CAAd;AADO,CAAf,CAA3B;;AAGA,MAAMa,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADsB,CAAZ,CAAxB;;AAGA,eAAeP,OAAO,CAACoB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjB,UAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport { incrementTime } from \"../../redux/time/time.actions\"\nimport { connect } from \"react-redux\"\n\nclass TimeKeeper extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    this.theTimer(\"go\")\n  }\n\n  theTimer = (action) => {\n    // destructuring props\n    let {\n      incrementTime,\n      time: { time },\n    } = this.props\n\n    if (action === \"go\") {\n      this.timer = setTimeout(() => {\n        if (time < 16) {\n          incrementTime(time + 1)\n        } else {\n          incrementTime(1)\n        }\n      }, 100)\n    } else if (action === \"stop\") {\n      clearInterval(this.timer)\n    }\n  }\n\n  stopTimer = () => {\n    console.log(\"hej\")\n  }\n\n  startTimer = () => {\n    this.props.incrementTime(1)\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.startTimer()}>Start Time</button>\n        <button onClick={() => this.theTimer(\"stop\")}>>stop</button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  incrementTime: (time) => dispatch(incrementTime(time)),\n})\nconst mapStateToProps = (state) => ({\n  time: state.time,\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeKeeper)\n"]},"metadata":{},"sourceType":"module"}