{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Howl } from \"howler\";\nimport { sendSlotInfoToStore } from \"../../../redux/instrument-preset/isntrument.action\";\nimport \"./slot.styles.scss\";\n\nclass Slot extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.playSound = () => {\n      const src = this.props.instrument;\n      let audioEl = new Howl({\n        src\n      });\n\n      if (src.includes(\"/ho\")) {\n        audioEl.volume(0.7);\n      } else if (src.includes(\"/hh\")) {\n        audioEl.volume(0.5);\n      }\n\n      audioEl.play();\n    };\n\n    this.loadSlotWithSound = e => {};\n  }\n\n  componentDidMount() {\n    this.props.sendSlotInfoToStore({\n      loaded: false,\n      instrument: this.props.name,\n      number: this.props.number\n    });\n  }\n\n  componentDidUpdate() {\n    let {\n      number,\n      time: {\n        time\n      }\n    } = this.props; // if slotnumber === current time && has been clicked ( is loaded)\n    // we play the sounds\n    // if (number === time && this.state.loaded) {\n    //   this.playSound()\n    // }\n    // this.props.sendSlotInfoToStore(this.state)\n    // console.log(this.props)\n  } // render() {\n  //   return (\n  //     <div\n  //       onClick={(e) => this.loadSlotWithSound(e)}\n  //       className={`instrumentBoard__slotRow__slot ${\n  //         this.props.number === this.props.time.time\n  //           ? \"instrumentBoard__slotRow__slot__active active\"\n  //           : \"\"\n  //       }\n  //        ${\n  //         this.state.loaded\n  //           ? \"instrumentBoard__slotRow__slot__loaded loaded\"\n  //           : \"\"\n  //       }\n  //       `\n  //     }\n  //     ></div>\n  //   )\n  // }\n\n\n}\n\nconst mapStateToProps = state => ({\n  time: state.time,\n  preset: state.preset\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendSlotInfoToStore: slotInfo => dispatch(sendSlotInfoToStore(slotInfo))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Slot);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx"],"names":["React","connect","Howl","sendSlotInfoToStore","Slot","Component","playSound","src","props","instrument","audioEl","includes","volume","play","loadSlotWithSound","e","componentDidMount","loaded","name","number","componentDidUpdate","time","mapStateToProps","state","preset","mapDispatchToProps","dispatch","slotInfo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,mBAAT,QAAoC,oDAApC;AAEA,OAAO,oBAAP;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAwBjCC,SAxBiC,GAwBrB,MAAM;AAChB,YAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWC,UAAvB;AACA,UAAIC,OAAO,GAAG,IAAIR,IAAJ,CAAS;AACrBK,QAAAA;AADqB,OAAT,CAAd;;AAGA,UAAIA,GAAG,CAACI,QAAJ,CAAa,KAAb,CAAJ,EAAyB;AACvBD,QAAAA,OAAO,CAACE,MAAR,CAAe,GAAf;AACD,OAFD,MAEO,IAAIL,GAAG,CAACI,QAAJ,CAAa,KAAb,CAAJ,EAAyB;AAC9BD,QAAAA,OAAO,CAACE,MAAR,CAAe,GAAf;AACD;;AACDF,MAAAA,OAAO,CAACG,IAAR;AACD,KAnCgC;;AAAA,SAoCjCC,iBApCiC,GAoCZC,CAAD,IAAO,CAAE,CApCI;AAAA;;AACjCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,KAAL,CAAWL,mBAAX,CAA+B;AAC7Bc,MAAAA,MAAM,EAAE,KADqB;AAE7BR,MAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWU,IAFM;AAG7BC,MAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWW;AAHU,KAA/B;AAKD;;AACDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI;AACFD,MAAAA,MADE;AAEFE,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAFJ,QAGA,KAAKb,KAHT,CADmB,CAMnB;AACA;AACA;AACA;AACA;AAEA;AACA;AACD,GAtBgC,CAsCjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxDiC;;AA2DnC,MAAMc,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,IAAI,EAAEE,KAAK,CAACF,IADsB;AAElCG,EAAAA,MAAM,EAAED,KAAK,CAACC;AAFoB,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,mBAAmB,EAAGwB,QAAD,IAAcD,QAAQ,CAACvB,mBAAmB,CAACwB,QAAD,CAApB;AADH,CAAf,CAA3B;;AAGA,eAAe1B,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,IAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Howl } from \"howler\"\nimport { sendSlotInfoToStore } from \"../../../redux/instrument-preset/isntrument.action\"\n\nimport \"./slot.styles.scss\"\n\nclass Slot extends React.Component {\n  componentDidMount() {\n    this.props.sendSlotInfoToStore({\n      loaded: false,\n      instrument: this.props.name,\n      number: this.props.number,\n    })\n  }\n  componentDidUpdate() {\n    let {\n      number,\n      time: { time },\n    } = this.props\n\n    // if slotnumber === current time && has been clicked ( is loaded)\n    // we play the sounds\n    // if (number === time && this.state.loaded) {\n    //   this.playSound()\n    // }\n\n    // this.props.sendSlotInfoToStore(this.state)\n    // console.log(this.props)\n  }\n\n  playSound = () => {\n    const src = this.props.instrument\n    let audioEl = new Howl({\n      src,\n    })\n    if (src.includes(\"/ho\")) {\n      audioEl.volume(0.7)\n    } else if (src.includes(\"/hh\")) {\n      audioEl.volume(0.5)\n    }\n    audioEl.play()\n  }\n  loadSlotWithSound = (e) => {}\n\n  // render() {\n  //   return (\n  //     <div\n  //       onClick={(e) => this.loadSlotWithSound(e)}\n  //       className={`instrumentBoard__slotRow__slot ${\n  //         this.props.number === this.props.time.time\n  //           ? \"instrumentBoard__slotRow__slot__active active\"\n  //           : \"\"\n  //       }\n  //        ${\n  //         this.state.loaded\n  //           ? \"instrumentBoard__slotRow__slot__loaded loaded\"\n  //           : \"\"\n  //       }\n  //       `\n  //     }\n  //     ></div>\n  //   )\n  // }\n}\n\nconst mapStateToProps = (state) => ({\n  time: state.time,\n  preset: state.preset,\n})\nconst mapDispatchToProps = (dispatch) => ({\n  sendSlotInfoToStore: (slotInfo) => dispatch(sendSlotInfoToStore(slotInfo)),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Slot)\n"]},"metadata":{},"sourceType":"module"}