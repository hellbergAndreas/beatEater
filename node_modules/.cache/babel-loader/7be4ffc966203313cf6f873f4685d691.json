{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/preset/preset.component.jsx\";\nimport React from \"react\";\nimport \"./preset.styles.scss\";\nimport { converCollectionsSnapshotToMap, firestore, deletePreset } from \"../../firebase/firebase\";\nimport { connect } from \"react-redux\";\nimport { setPreset } from \"../../redux/instrument-preset/isntrument.action\";\n\nclass PresetMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: true,\n      presets: []\n    };\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"presets\");\n    collectionRef.onSnapshot(async snapshot => {\n      const presetsFromDb = converCollectionsSnapshotToMap(snapshot);\n      this.setState(() => {\n        return {\n          presets: presetsFromDb\n        };\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preset__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preset__content__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Presets\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }\n    }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preset__content__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, this.state.presets.map((preset, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"preset__content__list__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        onClick: () => this.props.setPreset(preset),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, \"Preset \", index + 1), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => deletePreset(\"presets\", preset.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, \"x\"));\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setPreset: preset => dispatch(setPreset(preset))\n});\n\nexport default connect(null, mapDispatchToProps)(PresetMenu);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/preset/preset.component.jsx"],"names":["React","converCollectionsSnapshotToMap","firestore","deletePreset","connect","setPreset","PresetMenu","Component","constructor","props","state","hidden","presets","componentDidMount","collectionRef","collection","onSnapshot","snapshot","presetsFromDb","setState","render","map","preset","index","id","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AAEA,SACEC,8BADF,EAEEC,SAFF,EAGEC,YAHF,QAIO,yBAJP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,iDAA1B;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,SAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;AAEA,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AAAEP,UAAAA,OAAO,EAAEM;AAAX,SAAP;AACD,OAFD;AAGD,KAND;AAOD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,oBACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADnB,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWE,OAAX,CAAmBS,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzC,0BACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWJ,SAAX,CAAqBiB,MAArB,CAAnB;AAAiD,QAAA,GAAG,EAAEC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACUA,KAAK,GAAG,CADlB,CADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMpB,YAAY,CAAC,SAAD,EAAYmB,MAAM,CAACE,EAAnB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF;AAUD,KAXA,CADH,CAJF,CADF,CADF;AAuBD;;AA5CsC;;AA8CzC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,SAAS,EAAGiB,MAAD,IAAYI,QAAQ,CAACrB,SAAS,CAACiB,MAAD,CAAV;AADS,CAAf,CAA3B;;AAGA,eAAelB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCnB,UAAlC,CAAf","sourcesContent":["import React from \"react\"\nimport \"./preset.styles.scss\"\n\nimport {\n  converCollectionsSnapshotToMap,\n  firestore,\n  deletePreset,\n} from \"../../firebase/firebase\"\nimport { connect } from \"react-redux\"\nimport { setPreset } from \"../../redux/instrument-preset/isntrument.action\"\n\nclass PresetMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hidden: true,\n      presets: [],\n    }\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"presets\")\n    collectionRef.onSnapshot(async (snapshot) => {\n      const presetsFromDb = converCollectionsSnapshotToMap(snapshot)\n\n      this.setState(() => {\n        return { presets: presetsFromDb }\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"preset\">\n        <div className=\"preset__content\">\n          <div className=\"preset__content__header\">\n            <h2>Presets</h2> <button>x</button>\n          </div>\n          <div className=\"preset__content__list\">\n            {this.state.presets.map((preset, index) => {\n              return (\n                <div className=\"preset__content__list__item\">\n                  <h3 onClick={() => this.props.setPreset(preset)} key={index}>\n                    Preset {index + 1}\n                  </h3>\n                  <button onClick={() => deletePreset(\"presets\", preset.id)}>\n                    x\n                  </button>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  setPreset: (preset) => dispatch(setPreset(preset)),\n})\nexport default connect(null, mapDispatchToProps)(PresetMenu)\n"]},"metadata":{},"sourceType":"module"}