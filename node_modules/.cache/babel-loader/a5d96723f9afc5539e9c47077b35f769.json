{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport bd from \"../../../sounds/bd.mp3\";\nimport \"./slot.styles.scss\"; // const Slot = ({ number, time: { time } }) => {\n//   // check if global time === this.props.number\n//   const playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.play()\n//   }\n//   return (\n//     <div\n//       onClick={() => playSound()}\n//       className={`${number === time ? \"active\" : \"\"} instrumentSlot`}\n//     >\n//       <audio className=\"audio-element\">\n//         <source src=\"../../../sounds/bd.mp3\"></source>\n//       </audio>\n//     </div>\n//   )\n// }\n\nclass Slot extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.playSound = () => {\n      const audioEl = document.getElementsByClassName(\"audio-element\")[0];\n      audioEl.cloneNode(true).play();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"instrumentSlot\",\n      onClick: () => this.playSound(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      className: \"audio-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: bd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  time: state.time\n});\n\nexport default connect(mapStateToProps)(Slot);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx"],"names":["React","connect","bd","Slot","Component","playSound","audioEl","document","getElementsByClassName","cloneNode","play","render","mapStateToProps","state","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,wBAAf;AACA,OAAO,oBAAP,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCC,SADiC,GACrB,MAAM;AAChB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,CAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkB,IAAlB,EAAwBC,IAAxB;AACD,KAJgC;AAAA;;AAKjCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAE,MAAM,KAAKN,SAAL,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,GAAG,EAAEH,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAbgC;;AAenC,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADsB,CAAZ,CAAxB;;AAGA,eAAeb,OAAO,CAACW,eAAD,CAAP,CAAyBT,IAAzB,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport bd from \"../../../sounds/bd.mp3\"\nimport \"./slot.styles.scss\"\n\n// const Slot = ({ number, time: { time } }) => {\n//   // check if global time === this.props.number\n\n//   const playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.play()\n//   }\n\n//   return (\n//     <div\n//       onClick={() => playSound()}\n//       className={`${number === time ? \"active\" : \"\"} instrumentSlot`}\n//     >\n//       <audio className=\"audio-element\">\n//         <source src=\"../../../sounds/bd.mp3\"></source>\n//       </audio>\n//     </div>\n//   )\n// }\n\nclass Slot extends React.Component {\n  playSound = () => {\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n    audioEl.cloneNode(true).play()\n  }\n  render() {\n    return (\n      <div className=\"instrumentSlot\" onClick={() => this.playSound()}>\n        <audio className=\"audio-element\">\n          <source src={bd}></source>\n        </audio>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  time: state.time,\n})\nexport default connect(mapStateToProps)(Slot)\n"]},"metadata":{},"sourceType":"module"}