{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/timekeeper/timeKeeper.jsx\";\nimport React from \"react\";\nimport { incrementTime } from \"../../redux/time/time.actions\";\nimport { connect } from \"react-redux\";\nimport \"./timeKeeper.styles.scss\";\n\nclass TimeKeeper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.theTimer = action => {\n      // destructuring props\n      let {\n        incrementTime,\n        time: {\n          time\n        }\n      } = this.props;\n\n      if (action === \"go\") {\n        this.timer = setTimeout(() => {\n          if (time < 16) {\n            incrementTime(time + 1);\n          } else {\n            incrementTime(1);\n          }\n        }, 100);\n      } else if (action === \"stop\") {\n        clearInterval(this.timer);\n      }\n    };\n\n    this.startTimer = () => {\n      this.props.incrementTime(1);\n    };\n\n    this.state = {\n      timeGoes: false\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    this.theTimer(\"go\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"buttons__button\",\n      onClick: () => this.startTimer(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"buttons__button\",\n      onClick: () => this.theTimer(\"stop\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Stop\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  incrementTime: time => dispatch(incrementTime(time))\n});\n\nconst mapStateToProps = state => ({\n  time: state.time\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeKeeper);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/timekeeper/timeKeeper.jsx"],"names":["React","incrementTime","connect","TimeKeeper","Component","constructor","props","theTimer","action","time","timer","setTimeout","clearInterval","startTimer","state","timeGoes","componentDidMount","componentDidUpdate","render","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,0BAAP;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,QAbmB,GAaPC,MAAD,IAAY;AACrB;AACA,UAAI;AACFP,QAAAA,aADE;AAEFQ,QAAAA,IAAI,EAAE;AAAEA,UAAAA;AAAF;AAFJ,UAGA,KAAKH,KAHT;;AAKA,UAAIE,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAKE,KAAL,GAAaC,UAAU,CAAC,MAAM;AAC5B,cAAIF,IAAI,GAAG,EAAX,EAAe;AACbR,YAAAA,aAAa,CAACQ,IAAI,GAAG,CAAR,CAAb;AACD,WAFD,MAEO;AACLR,YAAAA,aAAa,CAAC,CAAD,CAAb;AACD;AACF,SANsB,EAMpB,GANoB,CAAvB;AAOD,OARD,MAQO,IAAIO,MAAM,KAAK,MAAf,EAAuB;AAC5BI,QAAAA,aAAa,CAAC,KAAKF,KAAN,CAAb;AACD;AACF,KA/BkB;;AAAA,SAiCnBG,UAjCmB,GAiCN,MAAM;AACjB,WAAKP,KAAL,CAAWL,aAAX,CAAyB,CAAzB;AACD,KAnCkB;;AAGjB,SAAKa,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,kBAAkB,GAAG;AACnB,SAAKV,QAAL,CAAc,IAAd;AACD;;AA0BDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAgC,MAAA,OAAO,EAAE,MAAM,KAAKL,UAAL,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAgC,MAAA,OAAO,EAAE,MAAM,KAAKN,QAAL,CAAc,MAAd,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF;AAUD;;AAjDsC;;AAoDzC,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,aAAa,EAAGQ,IAAD,IAAUW,QAAQ,CAACnB,aAAa,CAACQ,IAAD,CAAd;AADO,CAAf,CAA3B;;AAGA,MAAMY,eAAe,GAAIP,KAAD,KAAY;AAClCL,EAAAA,IAAI,EAAEK,KAAK,CAACL;AADsB,CAAZ,CAAxB;;AAGA,eAAeP,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ChB,UAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport { incrementTime } from \"../../redux/time/time.actions\"\nimport { connect } from \"react-redux\"\nimport \"./timeKeeper.styles.scss\"\n\nclass TimeKeeper extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      timeGoes: false,\n    }\n  }\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    this.theTimer(\"go\")\n  }\n\n  theTimer = (action) => {\n    // destructuring props\n    let {\n      incrementTime,\n      time: { time },\n    } = this.props\n\n    if (action === \"go\") {\n      this.timer = setTimeout(() => {\n        if (time < 16) {\n          incrementTime(time + 1)\n        } else {\n          incrementTime(1)\n        }\n      }, 100)\n    } else if (action === \"stop\") {\n      clearInterval(this.timer)\n    }\n  }\n\n  startTimer = () => {\n    this.props.incrementTime(1)\n  }\n\n  render() {\n    return (\n      <div class=\"buttons\">\n        <button class=\"buttons__button\" onClick={() => this.startTimer()}>\n          Start\n        </button>\n        <button class=\"buttons__button\" onClick={() => this.theTimer(\"stop\")}>\n          Stop\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  incrementTime: (time) => dispatch(incrementTime(time)),\n})\nconst mapStateToProps = (state) => ({\n  time: state.time,\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeKeeper)\n"]},"metadata":{},"sourceType":"module"}