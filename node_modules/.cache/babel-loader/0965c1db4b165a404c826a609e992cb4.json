{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport bd from \"../../../sounds/bd.mp3\";\nimport \"./slot.styles.scss\";\n\nconst Slot = ({\n  instrument,\n  number,\n  time: {\n    time\n  }\n}) => {\n  // check if global time === this.props.number\n  const playSound = () => {\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0];\n    audioEl.cloneNode(true).play();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => playSound(),\n    className: `${number === time ? \"active\" : \"\"} instrumentSlot`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    className: \"audio-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: bd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n}; // class Slot extends React.Component {\n//   playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.cloneNode(true).play()\n//   }\n//   render() {\n//     return (\n//       <div className=\"instrumentSlot\" onClick={() => this.playSound()}>\n//         <audio className=\"audio-element\">\n//           <source src={bd}></source>\n//         </audio>\n//       </div>\n//     )\n//   }\n// }\n\n\nconst mapStateToProps = state => ({\n  time: state.time\n});\n\nexport default connect(mapStateToProps)(Slot);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx"],"names":["React","connect","bd","Slot","instrument","number","time","playSound","audioEl","document","getElementsByClassName","cloneNode","play","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,wBAAf;AACA,OAAO,oBAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA,IAAI,EAAE;AAAEA,IAAAA;AAAF;AAA5B,CAAD,KAA4C;AACvD;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,OAAO,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,CAAhB;AACAF,IAAAA,OAAO,CAACG,SAAR,CAAkB,IAAlB,EAAwBC,IAAxB;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,OAAO,EAAE,MAAML,SAAS,EAD1B;AAEE,IAAA,SAAS,EAAG,GAAEF,MAAM,KAAKC,IAAX,GAAkB,QAAlB,GAA6B,EAAG,iBAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,GAAG,EAAEJ,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD,CAlBD,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADsB,CAAZ,CAAxB;;AAGA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBV,IAAzB,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport bd from \"../../../sounds/bd.mp3\"\nimport \"./slot.styles.scss\"\n\nconst Slot = ({ instrument, number, time: { time } }) => {\n  // check if global time === this.props.number\n\n  const playSound = () => {\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n    audioEl.cloneNode(true).play()\n  }\n\n  return (\n    <div\n      onClick={() => playSound()}\n      className={`${number === time ? \"active\" : \"\"} instrumentSlot`}\n    >\n      <audio className=\"audio-element\">\n        <source src={bd}></source>\n      </audio>\n    </div>\n  )\n}\n\n// class Slot extends React.Component {\n//   playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.cloneNode(true).play()\n//   }\n//   render() {\n//     return (\n//       <div className=\"instrumentSlot\" onClick={() => this.playSound()}>\n//         <audio className=\"audio-element\">\n//           <source src={bd}></source>\n//         </audio>\n//       </div>\n//     )\n//   }\n// }\nconst mapStateToProps = (state) => ({\n  time: state.time,\n})\nexport default connect(mapStateToProps)(Slot)\n"]},"metadata":{},"sourceType":"module"}