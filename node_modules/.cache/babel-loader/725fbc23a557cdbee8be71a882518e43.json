{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./slot.styles.scss\";\n\nclass Slot extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.playSound = () => {\n      let URL = \"../../../sounds/bd.mp3\";\n      const context = new AudioContext();\n      let yodelBuffer;\n      window.fetch(URL).then(response => response.arrayBuffer()).then(arrayBuffer => context.decodeAudioData(arrayBuffer)).then(audioBuffer => {\n        yodelBuffer = audioBuffer;\n      });\n\n      function play(audioBuffer) {\n        const source = context.createBufferSource();\n        source.buffer = audioBuffer;\n        source.connect(context.destination);\n        source.start();\n      }\n\n      play(yodelBuffer); // let audioEl = new Audio(this.props.instrument)\n      // audioEl.cloneNode(true).play()\n    };\n\n    this.loadSlotWithSound = e => {\n      this.setState(state => {\n        return {\n          loaded: !state.loaded\n        };\n      });\n    };\n\n    this.state = {\n      loaded: false\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    let {\n      number,\n      time: {\n        time\n      }\n    } = this.props; // if slotnumber === current time && has been clicked ( is loaded)\n    // we play the sounds\n\n    if (number === time && this.state.loaded) {\n      this.playSound();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.loadSlotWithSound(e),\n      className: `instrumentBoard__slotRow__slot ${this.props.number === this.props.time.time ? \"instrumentBoard__slotRow__slot__active active\" : \"\"} ${this.state.loaded ? \"instrumentBoard__slotRow__slot__loaded loaded\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  time: state.time\n});\n\nexport default connect(mapStateToProps)(Slot);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx"],"names":["React","connect","Slot","Component","constructor","props","playSound","URL","context","AudioContext","yodelBuffer","window","fetch","then","response","arrayBuffer","decodeAudioData","audioBuffer","play","source","createBufferSource","buffer","destination","start","loadSlotWithSound","e","setState","state","loaded","componentDidMount","componentDidUpdate","number","time","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,oBAAP;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,SApBmB,GAoBP,MAAM;AAChB,UAAIC,GAAG,GAAG,wBAAV;AAEA,YAAMC,OAAO,GAAG,IAAIC,YAAJ,EAAhB;AACA,UAAIC,WAAJ;AAEAC,MAAAA,MAAM,CACHC,KADH,CACSL,GADT,EAEGM,IAFH,CAESC,QAAD,IAAcA,QAAQ,CAACC,WAAT,EAFtB,EAGGF,IAHH,CAGSE,WAAD,IAAiBP,OAAO,CAACQ,eAAR,CAAwBD,WAAxB,CAHzB,EAIGF,IAJH,CAISI,WAAD,IAAiB;AACrBP,QAAAA,WAAW,GAAGO,WAAd;AACD,OANH;;AAOA,eAASC,IAAT,CAAcD,WAAd,EAA2B;AACzB,cAAME,MAAM,GAAGX,OAAO,CAACY,kBAAR,EAAf;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAgBJ,WAAhB;AACAE,QAAAA,MAAM,CAAClB,OAAP,CAAeO,OAAO,CAACc,WAAvB;AACAH,QAAAA,MAAM,CAACI,KAAP;AACD;;AACDL,MAAAA,IAAI,CAACR,WAAD,CAAJ,CAnBgB,CAoBhB;AACA;AACD,KA1CkB;;AAAA,SA2CnBc,iBA3CmB,GA2CEC,CAAD,IAAO;AACzB,WAAKC,QAAL,CAAeC,KAAD,IAAW;AACvB,eAAO;AAAEC,UAAAA,MAAM,EAAE,CAACD,KAAK,CAACC;AAAjB,SAAP;AACD,OAFD;AAGD,KA/CkB;;AAEjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG,CAAE;;AACtBC,EAAAA,kBAAkB,GAAG;AACnB,QAAI;AACFC,MAAAA,MADE;AAEFC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAFJ,QAGA,KAAK3B,KAHT,CADmB,CAMnB;AACA;;AACA,QAAI0B,MAAM,KAAKC,IAAX,IAAmB,KAAKL,KAAL,CAAWC,MAAlC,EAA0C;AACxC,WAAKtB,SAAL;AACD;AACF;;AA+BD2B,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,OAAO,EAAGR,CAAD,IAAO,KAAKD,iBAAL,CAAuBC,CAAvB,CADlB;AAEE,MAAA,SAAS,EAAG,kCACV,KAAKpB,KAAL,CAAW0B,MAAX,KAAsB,KAAK1B,KAAL,CAAW2B,IAAX,CAAgBA,IAAtC,GACI,+CADJ,GAEI,EACL,IACC,KAAKL,KAAL,CAAWC,MAAX,GACI,+CADJ,GAEI,EACL,EAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAcD;;AAjEgC;;AAoEnC,MAAMM,eAAe,GAAIP,KAAD,KAAY;AAClCK,EAAAA,IAAI,EAAEL,KAAK,CAACK;AADsB,CAAZ,CAAxB;;AAGA,eAAe/B,OAAO,CAACiC,eAAD,CAAP,CAAyBhC,IAAzB,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport \"./slot.styles.scss\"\n\nclass Slot extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n    }\n  }\n  componentDidMount() {}\n  componentDidUpdate() {\n    let {\n      number,\n      time: { time },\n    } = this.props\n\n    // if slotnumber === current time && has been clicked ( is loaded)\n    // we play the sounds\n    if (number === time && this.state.loaded) {\n      this.playSound()\n    }\n  }\n\n  playSound = () => {\n    let URL = \"../../../sounds/bd.mp3\"\n\n    const context = new AudioContext()\n    let yodelBuffer\n\n    window\n      .fetch(URL)\n      .then((response) => response.arrayBuffer())\n      .then((arrayBuffer) => context.decodeAudioData(arrayBuffer))\n      .then((audioBuffer) => {\n        yodelBuffer = audioBuffer\n      })\n    function play(audioBuffer) {\n      const source = context.createBufferSource()\n      source.buffer = audioBuffer\n      source.connect(context.destination)\n      source.start()\n    }\n    play(yodelBuffer)\n    // let audioEl = new Audio(this.props.instrument)\n    // audioEl.cloneNode(true).play()\n  }\n  loadSlotWithSound = (e) => {\n    this.setState((state) => {\n      return { loaded: !state.loaded }\n    })\n  }\n\n  render() {\n    return (\n      <div\n        onClick={(e) => this.loadSlotWithSound(e)}\n        className={`instrumentBoard__slotRow__slot ${\n          this.props.number === this.props.time.time\n            ? \"instrumentBoard__slotRow__slot__active active\"\n            : \"\"\n        } ${\n          this.state.loaded\n            ? \"instrumentBoard__slotRow__slot__loaded loaded\"\n            : \"\"\n        }`}\n      ></div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  time: state.time,\n})\nexport default connect(mapStateToProps)(Slot)\n"]},"metadata":{},"sourceType":"module"}