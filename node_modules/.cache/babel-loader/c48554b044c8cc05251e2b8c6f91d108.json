{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/timekeeper/timeKeeper.jsx\";\nimport React from \"react\";\nimport { incrementTime } from \"../../redux/time/time.actions\";\nimport { connect } from \"react-redux\";\n\nconst TimeKeeper = ({\n  incrementTime\n}) => {\n  const startTime = () => {\n    setInterval(() => {}, 1000);\n    incrementTime(5);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => startTime(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Start Time\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  incrementTime: time => dispatch(incrementTime(time))\n});\n\nexport default connect(null, mapDispatchToProps)(TimeKeeper);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/timekeeper/timeKeeper.jsx"],"names":["React","incrementTime","connect","TimeKeeper","startTime","setInterval","mapDispatchToProps","dispatch","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAuB;AACxC,QAAMG,SAAS,GAAG,MAAM;AACtBC,IAAAA,WAAW,CAAC,MAAM,CAAE,CAAT,EAAW,IAAX,CAAX;AACAJ,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD,GAHD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMG,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD,CAVD;;AAYA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,aAAa,EAAGO,IAAD,IAAUD,QAAQ,CAACN,aAAa,CAACO,IAAD,CAAd;AADO,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CAAC,IAAD,EAAOI,kBAAP,CAAP,CAAkCH,UAAlC,CAAf","sourcesContent":["import React from \"react\"\nimport { incrementTime } from \"../../redux/time/time.actions\"\nimport { connect } from \"react-redux\"\n\nconst TimeKeeper = ({ incrementTime }) => {\n  const startTime = () => {\n    setInterval(() => {}, 1000)\n    incrementTime(5)\n  }\n  return (\n    <div>\n      <button onClick={() => startTime()}>Start Time</button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  incrementTime: (time) => dispatch(incrementTime(time)),\n})\n\nexport default connect(null, mapDispatchToProps)(TimeKeeper)\n"]},"metadata":{},"sourceType":"module"}