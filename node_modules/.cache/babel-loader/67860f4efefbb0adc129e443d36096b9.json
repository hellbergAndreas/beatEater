{"ast":null,"code":"var _jsxFileName = \"/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./slot.styles.scss\";\nimport { importSound } from \"../sounds/sounds\";\n\nclass Slot extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.playSound = () => {\n      const audioEl = document.getElementsByClassName(\"audio-element\")[0];\n      audioEl.cloneNode(true).play();\n    };\n\n    this.setClassName = e => {\n      e.target.classList.toggle(\"loaded\");\n      this.playSound();\n    };\n  }\n\n  // check if global time === this.props.number\n  componentDidMount() {\n    let {\n      instrument,\n      number,\n      time: {\n        time\n      }\n    } = this.props;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: e => this.setClassName(e),\n      className: `${this.props.number === this.props.time.time ? \"active\" : \"\"} instrumentSlot`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      className: \"audio-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: importSound(this.props.instrument),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // class Slot extends React.Component {\n//   playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.cloneNode(true).play()\n//   }\n//   render() {\n//     return (\n//       <div className=\"instrumentSlot\" onClick={() => this.playSound()}>\n//         <audio className=\"audio-element\">\n//           <source src={bd}></source>\n//         </audio>\n//       </div>\n//     )\n//   }\n// }\n// const Slot = ({ instrument, number, time: { time } }) => {\n//   // check if global time === this.props.number\n//   const playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.cloneNode(true).play()\n//   }\n//   const setClassName = (e) => {\n//     e.target.classList.toggle(\"loaded\")\n//     playSound()\n//   }\n//   return (\n//     <div\n//       onClick={(e) => setClassName(e)}\n//       className={`${number === time ? \"active\" : \"\"} instrumentSlot`}\n//     >\n//       <audio className=\"audio-element\">\n//         <source src={importSound(instrument)}></source>\n//         {/* <source src=\"../../../sounds/hh.mp3\"></source> */}\n//       </audio>\n//     </div>\n//   )\n// }\n\n\nconst mapStateToProps = state => ({\n  time: state.time\n});\n\nexport default connect(mapStateToProps)(Slot);","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/components/instrument-board/slots/slot.jsx"],"names":["React","connect","importSound","Slot","Component","playSound","audioEl","document","getElementsByClassName","cloneNode","play","setClassName","e","target","classList","toggle","componentDidMount","instrument","number","time","props","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAUjCC,SAViC,GAUrB,MAAM;AAChB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,CAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkB,IAAlB,EAAwBC,IAAxB;AACD,KAbgC;;AAAA,SAcjCC,YAdiC,GAcjBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,MAAnB,CAA0B,QAA1B;AACA,WAAKV,SAAL;AACD,KAjBgC;AAAA;;AACjC;AACAW,EAAAA,iBAAiB,GAAG;AAClB,QAAI;AACFC,MAAAA,UADE;AAEFC,MAAAA,MAFE;AAGFC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAHJ,QAIA,KAAKC,KAJT;AAKD;;AAWDC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,OAAO,EAAGT,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CADlB;AAEE,MAAA,SAAS,EAAG,GACV,KAAKQ,KAAL,CAAWF,MAAX,KAAsB,KAAKE,KAAL,CAAWD,IAAX,CAAgBA,IAAtC,GAA6C,QAA7C,GAAwD,EACzD,iBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,GAAG,EAAEjB,WAAW,CAAC,KAAKkB,KAAL,CAAWH,UAAZ,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF;AAaD;;AAjCgC,C,CAoCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,IAAI,EAAEI,KAAK,CAACJ;AADsB,CAAZ,CAAxB;;AAGA,eAAelB,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,IAAzB,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\nimport \"./slot.styles.scss\"\nimport { importSound } from \"../sounds/sounds\"\n\nclass Slot extends React.Component {\n  // check if global time === this.props.number\n  componentDidMount() {\n    let {\n      instrument,\n      number,\n      time: { time },\n    } = this.props\n  }\n\n  playSound = () => {\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n    audioEl.cloneNode(true).play()\n  }\n  setClassName = (e) => {\n    e.target.classList.toggle(\"loaded\")\n    this.playSound()\n  }\n\n  render() {\n    return (\n      <div\n        onClick={(e) => this.setClassName(e)}\n        className={`${\n          this.props.number === this.props.time.time ? \"active\" : \"\"\n        } instrumentSlot`}\n      >\n        <audio className=\"audio-element\">\n          <source src={importSound(this.props.instrument)}></source>\n          {/* <source src=\"../../../sounds/hh.mp3\"></source> */}\n        </audio>\n      </div>\n    )\n  }\n}\n\n// class Slot extends React.Component {\n//   playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.cloneNode(true).play()\n//   }\n//   render() {\n//     return (\n//       <div className=\"instrumentSlot\" onClick={() => this.playSound()}>\n//         <audio className=\"audio-element\">\n//           <source src={bd}></source>\n//         </audio>\n//       </div>\n//     )\n//   }\n// }\n// const Slot = ({ instrument, number, time: { time } }) => {\n//   // check if global time === this.props.number\n\n//   const playSound = () => {\n//     const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n//     audioEl.cloneNode(true).play()\n//   }\n//   const setClassName = (e) => {\n//     e.target.classList.toggle(\"loaded\")\n//     playSound()\n//   }\n\n//   return (\n//     <div\n//       onClick={(e) => setClassName(e)}\n//       className={`${number === time ? \"active\" : \"\"} instrumentSlot`}\n//     >\n//       <audio className=\"audio-element\">\n//         <source src={importSound(instrument)}></source>\n//         {/* <source src=\"../../../sounds/hh.mp3\"></source> */}\n//       </audio>\n//     </div>\n//   )\n// }\nconst mapStateToProps = (state) => ({\n  time: state.time,\n})\nexport default connect(mapStateToProps)(Slot)\n"]},"metadata":{},"sourceType":"module"}