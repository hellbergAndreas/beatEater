{"ast":null,"code":"const INITIAL_STATE = {\n  time: 1\n};\n\nconst timeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"INCREMENT_TIME\":\n      return {\n        time: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default timeReducer;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/redux/time/time.reducer.js"],"names":["INITIAL_STATE","time","timeReducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO;AACLJ,QAAAA,IAAI,EAAEG,MAAM,CAACE;AADR,OAAP;;AAGF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["const INITIAL_STATE = {\n  time: 1,\n}\n\nconst timeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"INCREMENT_TIME\":\n      return {\n        time: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default timeReducer\n"]},"metadata":{},"sourceType":"module"}