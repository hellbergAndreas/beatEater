{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyANEZ-_zv0oeKqsAJigZ_-Kb5gHGt4zSps\",\n  authDomain: \"getshitdone-e7f87.firebaseapp.com\",\n  databaseURL: \"https://getshitdone-e7f87.firebaseio.com\",\n  projectId: \"getshitdone-e7f87\",\n  storageBucket: \"getshitdone-e7f87.appspot.com\",\n  messagingSenderId: \"344852769619\",\n  appId: \"1:344852769619:web:af98a2f8dce124000d8fa6\"\n};\nconst fireApp = firebase.initializeApp(config);\nexport const converCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const task = doc.data();\n    return {\n      task\n    };\n  });\n  const mapped = transformedCollection.map(el => {\n    return el.task;\n  });\n  return mapped;\n};\nconst db = fireApp.firestore();\nexport { db };\nexport const addPreset = (collectionKey, preset) => {\n  let random = Math.random();\n  let key = random.toString();\n  console.log(key);\n  db.collection(collectionKey).doc(key).set({\n    preset,\n    id: key\n  });\n};\nexport const deletePreset = (collectionKey, key) => {\n  let stringKey = key.toString();\n  db.collection(collectionKey).doc(stringKey).delete();\n};\nexport const updateTaskDocument = (collectionKey, key, newStage) => {\n  let stringKey = key.toString();\n  db.collection(collectionKey).doc(stringKey).update({\n    stage: newStage\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/andreashellberg/Desktop/programmeringsprojekt/beatEater/src/firebase/firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireApp","initializeApp","converCollectionsSnapshotToMap","collections","transformedCollection","docs","map","doc","task","data","mapped","el","db","firestore","addPreset","collectionKey","preset","random","Math","key","toString","console","log","collection","set","id","deletePreset","stringKey","delete","updateTaskDocument","newStage","update","stage","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,mCAFC;AAGbC,EAAAA,WAAW,EAAE,0CAHA;AAIbC,EAAAA,SAAS,EAAE,mBAJE;AAKbC,EAAAA,aAAa,EAAE,+BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,MAAMC,OAAO,GAAGT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,CAAhB;AAEA,OAAO,MAAMU,8BAA8B,GAAIC,WAAD,IAAiB;AAC7D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAsBC,GAAD,IAAS;AAC1D,UAAMC,IAAI,GAAGD,GAAG,CAACE,IAAJ,EAAb;AACA,WAAO;AACLD,MAAAA;AADK,KAAP;AAGD,GAL6B,CAA9B;AAMA,QAAME,MAAM,GAAGN,qBAAqB,CAACE,GAAtB,CAA2BK,EAAD,IAAQ;AAC/C,WAAOA,EAAE,CAACH,IAAV;AACD,GAFc,CAAf;AAIA,SAAOE,MAAP;AACD,CAZM;AAaP,MAAME,EAAE,GAAGZ,OAAO,CAACa,SAAR,EAAX;AACA,SAASD,EAAT;AAEA,OAAO,MAAME,SAAS,GAAG,CAACC,aAAD,EAAgBC,MAAhB,KAA2B;AAClD,MAAIC,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAb;AACA,MAAIE,GAAG,GAAGF,MAAM,CAACG,QAAP,EAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEAP,EAAAA,EAAE,CAACW,UAAH,CAAcR,aAAd,EAA6BR,GAA7B,CAAiCY,GAAjC,EAAsCK,GAAtC,CAA0C;AACxCR,IAAAA,MADwC;AAExCS,IAAAA,EAAE,EAAEN;AAFoC,GAA1C;AAID,CATM;AAWP,OAAO,MAAMO,YAAY,GAAG,CAACX,aAAD,EAAgBI,GAAhB,KAAwB;AAClD,MAAIQ,SAAS,GAAGR,GAAG,CAACC,QAAJ,EAAhB;AACAR,EAAAA,EAAE,CAACW,UAAH,CAAcR,aAAd,EAA6BR,GAA7B,CAAiCoB,SAAjC,EAA4CC,MAA5C;AACD,CAHM;AAKP,OAAO,MAAMC,kBAAkB,GAAG,CAACd,aAAD,EAAgBI,GAAhB,EAAqBW,QAArB,KAAkC;AAClE,MAAIH,SAAS,GAAGR,GAAG,CAACC,QAAJ,EAAhB;AACAR,EAAAA,EAAE,CAACW,UAAH,CAAcR,aAAd,EAA6BR,GAA7B,CAAiCoB,SAAjC,EAA4CI,MAA5C,CAAmD;AACjDC,IAAAA,KAAK,EAAEF;AAD0C,GAAnD;AAGD,CALM;AAOP,OAAO,MAAMG,IAAI,GAAG1C,QAAQ,CAAC0C,IAAT,EAAb;AACP,OAAO,MAAMpB,SAAS,GAAGtB,QAAQ,CAACsB,SAAT,EAAlB;AAEP,MAAMqB,QAAQ,GAAG,IAAI3C,QAAQ,CAAC0C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe3C,QAAf","sourcesContent":["import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\n\nconst config = {\n  apiKey: \"AIzaSyANEZ-_zv0oeKqsAJigZ_-Kb5gHGt4zSps\",\n  authDomain: \"getshitdone-e7f87.firebaseapp.com\",\n  databaseURL: \"https://getshitdone-e7f87.firebaseio.com\",\n  projectId: \"getshitdone-e7f87\",\n  storageBucket: \"getshitdone-e7f87.appspot.com\",\n  messagingSenderId: \"344852769619\",\n  appId: \"1:344852769619:web:af98a2f8dce124000d8fa6\",\n}\n\nconst fireApp = firebase.initializeApp(config)\n\nexport const converCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const task = doc.data()\n    return {\n      task,\n    }\n  })\n  const mapped = transformedCollection.map((el) => {\n    return el.task\n  })\n\n  return mapped\n}\nconst db = fireApp.firestore()\nexport { db }\n\nexport const addPreset = (collectionKey, preset) => {\n  let random = Math.random()\n  let key = random.toString()\n  console.log(key)\n\n  db.collection(collectionKey).doc(key).set({\n    preset,\n    id: key,\n  })\n}\n\nexport const deletePreset = (collectionKey, key) => {\n  let stringKey = key.toString()\n  db.collection(collectionKey).doc(stringKey).delete()\n}\n\nexport const updateTaskDocument = (collectionKey, key, newStage) => {\n  let stringKey = key.toString()\n  db.collection(collectionKey).doc(stringKey).update({\n    stage: newStage,\n  })\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({ prompt: \"select_account\" })\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}